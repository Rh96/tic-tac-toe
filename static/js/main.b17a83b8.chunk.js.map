{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","App.js","index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","Component","calculateWinner","lines","length","a","b","c","Game","state","history","Array","fill","stepNumber","xIsNext","slice","setState","concat","step","status","current","winner","moves","map","move","desc","jumpTo","handleClick","App","Fragment","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAWeA,MATf,SAAiBC,GACb,OACI,wBACIC,UAAU,SAASC,QAASF,EAAME,QADtC,SAEKF,EAAMG,SC8BJC,E,kKAhCX,SAAaC,GAAI,IAAD,OACd,OACE,cAAC,EAAD,CACEF,MAAOG,KAAKN,MAAMO,QAAQF,GAC1BH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,oBAKxC,WACE,OACE,gCACE,sBAAKJ,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAErB,sBAAKP,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAErB,sBAAKP,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,a,GA1BXC,aC4EpB,SAASC,EAAgBH,GAWrB,IAVA,IAAMI,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEFN,EAAI,EAAGA,EAAIM,EAAMC,OAAQP,IAAK,CACnC,kBAAkBM,EAAMN,GAAxB,GAAOQ,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAGR,EAAQM,IAAMN,EAAQM,KAAON,EAAQO,IAAMP,EAAQM,KAAON,EAAQQ,GACjE,OAAOR,EAAQM,GAGvB,OAAO,KAGIG,M,kDA/FX,WAAYhB,GAAQ,IAAD,8BACf,cAAMA,IACDiB,MAAQ,CACTC,QAAS,CAAC,CACNX,QAASY,MAAM,GAAGC,KAAK,QAE3BC,WAAY,EACZC,SAAS,GAPE,E,+CAWnB,SAAYjB,GACR,IAAMa,EAAUZ,KAAKW,MAAMC,QAAQK,MAAM,EAAGjB,KAAKW,MAAMI,WAAa,GAE9Dd,EADUW,EAAQA,EAAQN,OAAS,GACjBL,QAAQgB,QAC7Bb,EAAgBH,IAAYA,EAAQF,KAGvCE,EAAQF,GAAKC,KAAKW,MAAMK,QAAU,IAAM,IACxChB,KAAKkB,SAAS,CACVN,QAASA,EAAQO,OAAO,CAAC,CACrBlB,QAASA,KAEbc,WAAYH,EAAQN,OACpBU,SAAUhB,KAAKW,MAAMK,a,oBAI7B,SAAOI,GACHpB,KAAKkB,SAAS,CACVH,WAAYK,EACZJ,QAAUI,EAAO,IAAO,M,oBAIhC,WAAU,IAgBFC,EAhBC,OACCT,EAAUZ,KAAKW,MAAMC,QACrBU,EAAUV,EAAQZ,KAAKW,MAAMI,YAC7BQ,EAASnB,EAAgBkB,EAAQrB,SAEjCuB,EAAQZ,EAAQa,KAAI,SAACL,EAAMM,GAC7B,IAAMC,EAAOD,EACT,eAAiBA,EACjB,mBACJ,OACI,6BACI,wBAAQ9B,QAAS,kBAAM,EAAKgC,OAAOF,IAAnC,SAA2CC,KADtCD,MAajB,OALIL,EADAE,EACS,WAAaA,EAEb,iBAAmBvB,KAAKW,MAAMK,QAAU,IAAM,KAIvD,sBAAKrB,UAAU,OAAf,UACI,qBAAKA,UAAU,aAAf,SACI,cAAC,EAAD,CACIM,QAASqB,EAAQrB,QACjBL,QAAS,SAACG,GAAD,OAAO,EAAK8B,YAAY9B,QAGzC,sBAAKJ,UAAU,YAAf,UACI,8BAAM0B,IACN,6BAAKG,c,GArENrB,aCWJ2B,G,kKATb,WACE,OACE,cAAC,IAAMC,SAAP,UACE,cAAC,EAAD,U,GAJU5B,cCAlB6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b17a83b8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Square (props) {\r\n    return (\r\n        <button \r\n            className='square' onClick={props.onClick}>\r\n            {props.value}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Square\r\n","import React, { Component } from 'react'\r\nimport Square from './Square'\r\n\r\nclass Board extends Component {\r\n    renderSquare(i) {\r\n      return (\r\n        <Square\r\n          value={this.props.squares[i]}\r\n          onClick={() => this.props.onClick(i)}\r\n        />\r\n      );\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(0)}\r\n            {this.renderSquare(1)}\r\n            {this.renderSquare(2)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(3)}\r\n            {this.renderSquare(4)}\r\n            {this.renderSquare(5)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(6)}\r\n            {this.renderSquare(7)}\r\n            {this.renderSquare(8)}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default Board","import React, { Component } from 'react'\r\nimport Board from './Board'\r\n\r\nclass Game extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            history: [{\r\n                squares: Array(9).fill(null),\r\n            }],\r\n            stepNumber: 0,\r\n            xIsNext: true,\r\n        }\r\n    }\r\n\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        if(calculateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O'\r\n        this.setState({ \r\n            history: history.concat([{\r\n                squares: squares,\r\n            }]),\r\n            stepNumber: history.length,\r\n            xIsNext: !this.state.xIsNext,\r\n        });\r\n    }\r\n\r\n    jumpTo(step) {\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0,\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = calculateWinner(current.squares);\r\n\r\n        const moves = history.map((step, move) => {\r\n            const desc = move ?\r\n                'Go to move #' + move :\r\n                'Go to game start';\r\n            return (\r\n                <li key={move}>\r\n                    <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n                </li>\r\n            );\r\n        });\r\n\r\n        let status;\r\n        if (winner) {\r\n            status = 'Winner: ' + winner;\r\n        } else {\r\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n        }\r\n\r\n        return (\r\n            <div className='game'>\r\n                <div className='game-board'>\r\n                    <Board \r\n                        squares={current.squares}\r\n                        onClick={(i) => this.handleClick(i)}\r\n                    />\r\n                </div>\r\n                <div className='game-info'>\r\n                    <div>{status}</div>\r\n                    <ol>{moves}</ol>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 8],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if(squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a]\r\n        }\r\n    }\r\n    return null\r\n}\r\n\r\nexport default Game\r\n","import React, { Component } from \"react\";\nimport Game from './components/Game'\nimport './App.css'\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Game />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}